Index: app/src/main/java/com/ryh/suyangdaegun/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.ryh.suyangdaegun\r\n\r\nimport android.os.Bundle\r\nimport androidx.activity.ComponentActivity\r\nimport androidx.activity.compose.setContent\r\nimport androidx.compose.foundation.layout.Arrangement\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.fillMaxSize\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.material3.Button\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.LaunchedEffect\r\nimport androidx.compose.runtime.rememberCoroutineScope\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.navigation.NavHostController\r\nimport androidx.navigation.compose.NavHost\r\nimport androidx.navigation.compose.composable\r\nimport androidx.navigation.compose.rememberNavController\r\nimport com.google.firebase.auth.FirebaseAuth\r\nimport kotlinx.coroutines.delay\r\nimport kotlinx.coroutines.launch\r\n\r\nclass MainActivity : ComponentActivity() {\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContent {\r\n            val navController = rememberNavController() // NavController 생성\r\n            AppNavigator(navController = navController) // NavController 전달\r\n        }\r\n    }\r\n}\r\n\r\n\r\n@Composable\r\nfun MainScreen(\r\n    onNavigateToMatching: () -> Unit,\r\n    onNavigateToChatList: () -> Unit,\r\n    onNavigateToMyPage: () -> Unit\r\n) {\r\n    Column(\r\n        modifier = Modifier.fillMaxSize()\r\n    ) {\r\n        Text(\"Main Screen\", modifier = Modifier.padding(16.dp))\r\n        Button(\r\n            onClick = onNavigateToMatching,\r\n            modifier = Modifier\r\n                .fillMaxWidth()\r\n                .padding(vertical = 8.dp)\r\n        ) {\r\n            Text(\"Go to Matching\")\r\n        }\r\n        Button(\r\n            onClick = onNavigateToChatList,\r\n            modifier = Modifier\r\n                .fillMaxWidth()\r\n                .padding(vertical = 8.dp)\r\n        ) {\r\n            Text(\"Go to Chat List\")\r\n        }\r\n        Button(\r\n            onClick = onNavigateToMyPage,\r\n            modifier = Modifier\r\n                .fillMaxWidth()\r\n                .padding(vertical = 8.dp)\r\n        ) {\r\n            Text(\"Go to My Page\")\r\n        }\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/ryh/suyangdaegun/MainActivity.kt b/app/src/main/java/com/ryh/suyangdaegun/MainActivity.kt
--- a/app/src/main/java/com/ryh/suyangdaegun/MainActivity.kt	(revision 6ab151d1257f341195e071b5d2074070394687a7)
+++ b/app/src/main/java/com/ryh/suyangdaegun/MainActivity.kt	(date 1738804961532)
@@ -20,7 +20,7 @@
 import androidx.navigation.compose.NavHost
 import androidx.navigation.compose.composable
 import androidx.navigation.compose.rememberNavController
-import com.google.firebase.auth.FirebaseAuth
+//import com.google.firebase.auth.FirebaseAuth
 import kotlinx.coroutines.delay
 import kotlinx.coroutines.launch
 
Index: app/src/main/java/com/ryh/suyangdaegun/LoginActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.ryh.suyangdaegun\r\n\r\nimport android.content.Intent\r\nimport android.os.Bundle\r\nimport android.widget.Toast\r\nimport androidx.activity.ComponentActivity\r\nimport androidx.activity.compose.setContent\r\nimport androidx.compose.foundation.Image\r\nimport androidx.compose.foundation.background\r\nimport androidx.compose.foundation.layout.Arrangement\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.fillMaxHeight\r\nimport androidx.compose.foundation.layout.fillMaxSize\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.height\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.material3.Button\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.text.font.FontWeight\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.unit.sp\r\nimport androidx.navigation.NavController\r\nimport androidx.navigation.NavHostController\r\nimport androidx.navigation.compose.rememberNavController\r\nimport com.google.firebase.auth.FirebaseAuth\r\nimport com.google.firebase.auth.GoogleAuthProvider\r\n\r\n\r\n\r\nclass LoginActivity : ComponentActivity() {\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContent {\r\n            val navController = rememberNavController()\r\n            AppNavigator(navController = navController) // NavController 전달\r\n        }\r\n    }\r\n}\r\n\r\n//    private fun navigateToAccessionNavigator() {\r\n//        val intent = Intent(this, AccessionActivity::class.java)\r\n//        startActivity(intent)\r\n//        finish() // 현재 액티비티 종료\r\n//    }\r\n//}\r\n\r\n//    private fun googleSignIn() {\r\n//        // 예제: Google 로그인 로직 구현\r\n//        Toast.makeText(this, \"Google 로그인 구현 필요\", Toast.LENGTH_SHORT).show()\r\n//        firebaseAuth.signInWithCredential(GoogleAuthProvider.getCredential(null, null))\r\n//            .addOnCompleteListener {\r\n//                if (it.isSuccessful) {\r\n//                    navigateToMain()\r\n//                } else {\r\n//                    Toast.makeText(this, \"Google 로그인 실패\", Toast.LENGTH_SHORT).show()\r\n//                }\r\n//            }\r\n//    }\r\n//\r\n//    private fun kakaoSignIn() {\r\n//        Toast.makeText(this, \"Kakao 로그인 구현 필요\", Toast.LENGTH_SHORT).show()\r\n//        // Kakao 로그인 로직 추가\r\n//        navigateToMain() // 성공 시 메인 화면 이동\r\n//    }\r\n//\r\n//    private fun naverSignIn() {\r\n//        Toast.makeText(this, \"Naver 로그인 구현 필요\", Toast.LENGTH_SHORT).show()\r\n//        // Naver 로그인 로직 추가\r\n//        navigateToMain() // 성공 시 메인 화면 이동\r\n//    }\r\n//\r\n//    private fun navigateToMain() {\r\n//        startActivity(Intent(this, MainActivity::class.java))\r\n//        finish()\r\n//    }\r\n//}\r\n\r\n@Composable\r\nfun LoginScreen(navController: NavHostController) {\r\n    Column(\r\n        modifier = Modifier.fillMaxSize(),\r\n        verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally\r\n    ) {\r\n        Column(\r\n            modifier = Modifier\r\n                .fillMaxWidth()\r\n                .background(color = Color.White)\r\n                .padding(16.dp),\r\n            verticalArrangement = Arrangement.Center,\r\n            horizontalAlignment = Alignment.CenterHorizontally\r\n        ) {\r\n            Text(text = \"SUNYANG\", fontSize = 50.sp, fontWeight = FontWeight.ExtraBold)\r\n            Text(text = \"새로운 인연\", fontSize = 36.sp, fontWeight = FontWeight.SemiBold)\r\n        }\r\n\r\n        Column(\r\n            modifier = Modifier\r\n                .fillMaxWidth()\r\n                .fillMaxHeight(0.26f),\r\n            verticalArrangement = Arrangement.spacedBy(8.dp),\r\n            horizontalAlignment = Alignment.CenterHorizontally\r\n        ) {\r\n            Button(\r\n                onClick = { navController.navigate(\"accession\") }, // Kakao 로그인 -> 회원가입 화면\r\n                modifier = Modifier\r\n                    .fillMaxWidth()\r\n                    .padding(horizontal = 16.dp)\r\n            ) {\r\n                Text(\"Kakao 로그인\")\r\n            }\r\n\r\n            Button(\r\n                onClick = { navController.navigate(\"accession\") }, // Google 로그인 -> 회원가입 화면\r\n                modifier = Modifier\r\n                    .fillMaxWidth()\r\n                    .padding(horizontal = 16.dp)\r\n            ) {\r\n                Text(\"Google 로그인\")\r\n            }\r\n\r\n            Button(\r\n                onClick = { navController.navigate(\"accession\") }, // Naver 로그인 -> 회원가입 화면\r\n                modifier = Modifier\r\n                    .fillMaxWidth()\r\n                    .padding(horizontal = 16.dp)\r\n            ) {\r\n                Text(\"Naver 로그인\")\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@Composable\r\nfun LoadingScreen() {\r\n    Column(\r\n        modifier = Modifier.fillMaxSize(),\r\n        verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally\r\n    ) {\r\n        Text(\"로딩 중...\", modifier = Modifier.padding(16.dp))\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/ryh/suyangdaegun/LoginActivity.kt b/app/src/main/java/com/ryh/suyangdaegun/LoginActivity.kt
--- a/app/src/main/java/com/ryh/suyangdaegun/LoginActivity.kt	(revision 6ab151d1257f341195e071b5d2074070394687a7)
+++ b/app/src/main/java/com/ryh/suyangdaegun/LoginActivity.kt	(date 1738810275546)
@@ -9,17 +9,25 @@
 import androidx.compose.foundation.background
 import androidx.compose.foundation.layout.Arrangement
 import androidx.compose.foundation.layout.Column
+import androidx.compose.foundation.layout.Row
+import androidx.compose.foundation.layout.Spacer
 import androidx.compose.foundation.layout.fillMaxHeight
 import androidx.compose.foundation.layout.fillMaxSize
 import androidx.compose.foundation.layout.fillMaxWidth
 import androidx.compose.foundation.layout.height
 import androidx.compose.foundation.layout.padding
+import androidx.compose.foundation.layout.size
+import androidx.compose.foundation.shape.RoundedCornerShape
 import androidx.compose.material3.Button
+import androidx.compose.material3.ButtonDefaults
 import androidx.compose.material3.Text
 import androidx.compose.runtime.Composable
 import androidx.compose.ui.Alignment
 import androidx.compose.ui.Modifier
+import androidx.compose.ui.draw.clip
 import androidx.compose.ui.graphics.Color
+import androidx.compose.ui.layout.ContentScale
+import androidx.compose.ui.res.painterResource
 import androidx.compose.ui.text.font.FontWeight
 import androidx.compose.ui.unit.dp
 import androidx.compose.ui.unit.sp
@@ -30,7 +38,6 @@
 import com.google.firebase.auth.GoogleAuthProvider
 
 
-
 class LoginActivity : ComponentActivity() {
     override fun onCreate(savedInstanceState: Bundle?) {
         super.onCreate(savedInstanceState)
@@ -82,7 +89,9 @@
 @Composable
 fun LoginScreen(navController: NavHostController) {
     Column(
-        modifier = Modifier.fillMaxSize(),
+        modifier = Modifier
+            .fillMaxSize()
+            .background(color = Color.White),
         verticalArrangement = Arrangement.Center,
         horizontalAlignment = Alignment.CenterHorizontally
     ) {
@@ -94,54 +103,120 @@
             verticalArrangement = Arrangement.Center,
             horizontalAlignment = Alignment.CenterHorizontally
         ) {
-            Text(text = "SUNYANG", fontSize = 50.sp, fontWeight = FontWeight.ExtraBold)
+            Image(
+                painter = painterResource(id = R.drawable.suyang),
+                contentDescription = "Logo Image",
+                modifier = Modifier.size(width = 230.dp, height = 50.dp),
+                contentScale = ContentScale.Inside
+            )
+
+            Spacer(modifier = Modifier.height(20.dp))
+
             Text(text = "새로운 인연", fontSize = 36.sp, fontWeight = FontWeight.SemiBold)
         }
 
+        Spacer(modifier = Modifier.height(260.dp))
+
         Column(
             modifier = Modifier
-                .fillMaxWidth()
-                .fillMaxHeight(0.26f),
-            verticalArrangement = Arrangement.spacedBy(8.dp),
+                .fillMaxWidth(),
+//                .fillMaxHeight(0.4f)
+//            verticalArrangement = Arrangement.spacedBy(8.dp),
             horizontalAlignment = Alignment.CenterHorizontally
         ) {
+
             Button(
                 onClick = { navController.navigate("accession") }, // Kakao 로그인 -> 회원가입 화면
                 modifier = Modifier
                     .fillMaxWidth()
-                    .padding(horizontal = 16.dp)
+                    .height(100.dp)
+                    .padding(horizontal = 27.dp, vertical = 23.dp)
+                    .clip(RoundedCornerShape(20.dp)),
+                colors = ButtonDefaults.buttonColors(
+                    containerColor = Color(0xFFF5F5F8)
+                )
             ) {
-                Text("Kakao 로그인")
+                Row(
+                    horizontalArrangement = Arrangement.Center,
+                    verticalAlignment = Alignment.CenterVertically,
+                    modifier = Modifier.fillMaxWidth()
+                ) {
+                    Image(
+                        painter = painterResource(id = R.drawable.ic_kakao),
+                        contentDescription = "Kakao icon",
+                        modifier = Modifier
+                            .size(24.dp)
+                            .padding(end = 8.dp)
+                    )
+                    Text("카카오로 로그인", color = Color.Black,fontSize = 20.sp)
+                }
             }
 
             Button(
                 onClick = { navController.navigate("accession") }, // Google 로그인 -> 회원가입 화면
                 modifier = Modifier
                     .fillMaxWidth()
-                    .padding(horizontal = 16.dp)
-            ) {
-                Text("Google 로그인")
+                    .height(100.dp)
+                    .padding(horizontal = 27.dp, vertical = 23.dp)
+                    .clip(RoundedCornerShape(20.dp)),
+                colors = ButtonDefaults.buttonColors(
+                    containerColor = Color(0xFFF5F5F8)
+                )
+            )
+            {
+                Row(
+                    horizontalArrangement = Arrangement.Center,
+                    verticalAlignment = Alignment.CenterVertically,
+                    modifier = Modifier.fillMaxWidth()
+                ) {
+                    Image(
+                        painter = painterResource(id = R.drawable.ic_google),
+                        contentDescription = "google icon",
+                        modifier = Modifier
+                            .size(24.dp)
+                            .padding(end = 8.dp)
+                    )
+                    Text("Google로 로그인", color = Color.Black, fontSize = 20.sp)
+                }
             }
-
             Button(
                 onClick = { navController.navigate("accession") }, // Naver 로그인 -> 회원가입 화면
                 modifier = Modifier
                     .fillMaxWidth()
-                    .padding(horizontal = 16.dp)
-            ) {
-                Text("Naver 로그인")
+                    .height(100.dp)
+                    .padding(horizontal = 27.dp, vertical = 23.dp)
+                    .clip(RoundedCornerShape(20.dp)),
+                colors = ButtonDefaults.buttonColors(
+                    containerColor = Color(0xFFF5F5F8)
+                )
+            )
+            {
+                Row(
+                    horizontalArrangement = Arrangement.Center,
+                    verticalAlignment = Alignment.CenterVertically,
+                    modifier = Modifier.fillMaxWidth()
+                ) {
+                    Image(
+                        painter = painterResource(id = R.drawable.ic_naver),
+                        contentDescription = "Kakao icon",
+                        modifier = Modifier
+                            .size(24.dp)
+                            .padding(end = 8.dp)
+                    )
+                    Text("네이버로 로그인", color = Color.Black,fontSize = 20.sp)
+                }
             }
-        }
-    }
-}
+            }
+        }
+    }
 
-@Composable
-fun LoadingScreen() {
-    Column(
-        modifier = Modifier.fillMaxSize(),
-        verticalArrangement = Arrangement.Center,
-        horizontalAlignment = Alignment.CenterHorizontally
-    ) {
-        Text("로딩 중...", modifier = Modifier.padding(16.dp))
-    }
-}
+    @Composable
+    fun LoadingScreen() {
+        Column(
+            modifier = Modifier.fillMaxSize(),
+            verticalArrangement = Arrangement.Center,
+            horizontalAlignment = Alignment.CenterHorizontally
+        ) {
+            Text("로딩 중...", modifier = Modifier.padding(16.dp))
+        }
+    }
Index: app/src/main/java/com/ryh/suyangdaegun/AccessionActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.ryh.suyangdaegun\r\n\r\nimport android.graphics.Bitmap\r\nimport android.net.Uri\r\nimport android.os.Bundle\r\nimport android.provider.ContactsContract.CommonDataKinds.Nickname\r\nimport android.provider.MediaStore\r\nimport android.telecom.Call\r\nimport android.util.Base64\r\nimport android.util.Log\r\nimport androidx.activity.ComponentActivity\r\nimport androidx.activity.compose.setContent\r\nimport androidx.compose.foundation.layout.*\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.filled.ArrowBack\r\nimport androidx.compose.material3.*\r\nimport androidx.compose.runtime.*\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.lifecycle.viewmodel.compose.viewModel\r\nimport androidx.navigation.NavHostController\r\nimport androidx.navigation.compose.NavHost\r\nimport androidx.navigation.compose.composable\r\nimport androidx.navigation.compose.rememberNavController\r\nimport com.google.android.gms.common.api.Response\r\nimport com.google.firebase.Firebase\r\nimport com.google.firebase.firestore.firestore\r\nimport org.json.JSONObject\r\nimport java.io.ByteArrayOutputStream\r\nimport java.io.IOException\r\n\r\nclass AccessionActivity : ComponentActivity() {\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContent {\r\n            val navController = rememberNavController() // NavController 생성\r\n            AccessionNavigator(navController) // NavController 전달\r\n\r\n        }\r\n    }\r\n}\r\n\r\n// 성별 선택 화면\r\n@Composable\r\nfun GenderStep(viewModel: RegistrationViewModel, onNext: () -> Unit, onBack: () -> Unit) {\r\n    var selectedGender by remember { mutableStateOf(\"\") }\r\n\r\n    Column(modifier = Modifier.fillMaxSize().padding(16.dp)) {\r\n        NavigationBar(onBack = onBack)\r\n        StandardSpacer(0.07f)\r\n        TitleSection(\"안녕하세요! 정보를 입력해주세요\", \"프로필을 만들고 바로 커뮤니케이션을 시작하는 데 도움이 되는 간단한 정보를 알려주세요.\")\r\n\r\n        StandardSpacer(0.06f)\r\n\r\n        Row(\r\n            modifier = Modifier.fillMaxWidth(),\r\n            horizontalArrangement = Arrangement.SpaceEvenly\r\n        ) {\r\n            Button(onClick = { selectedGender = \"남성\" }) { Text(\"남성\") }\r\n            Button(onClick = { selectedGender = \"여성\" }) { Text(\"여성\") }\r\n        }\r\n\r\n        StandardSpacer(0.48f)\r\n\r\n        Button(onClick = {\r\n            viewModel.gender = selectedGender\r\n            onNext()\r\n        }, enabled = selectedGender.isNotEmpty()) {\r\n            Text(\"다음\")\r\n        }\r\n    }\r\n}\r\n\r\n// 닉네임 입력 화면\r\n@Composable\r\nfun NicknameStep(viewModel: RegistrationViewModel, onNext: () -> Unit, onBack: () -> Unit) {\r\n    var nickname by remember { mutableStateOf(\"\") }\r\n\r\n    Column(\r\n        modifier = Modifier\r\n            .fillMaxSize()\r\n            .padding(horizontal = 16.dp)\r\n    ) {\r\n        NavigationBar { }\r\n        StandardSpacer(0.07f)\r\n        TitleSection(\"이름을 설정해주세요\", \"본명을 사용하면 더 신뢰받을 수 있어요.\")\r\n\r\n        OutlinedTextField(\r\n            value = nickname,\r\n            onValueChange = { nickname = it },\r\n            label = { Text(\"이름\") },\r\n            modifier = Modifier.fillMaxWidth()\r\n        )\r\n\r\n        StandardSpacer(0.6f)\r\n\r\n        Button(onClick = {\r\n            viewModel.nickname = nickname\r\n            onNext()\r\n        }, enabled = nickname.isNotEmpty()) {\r\n            Text(\"다음\")\r\n        }\r\n    }\r\n}\r\n\r\n// 생년월일 입력 화면\r\n@Composable\r\nfun BirthdateStep(viewModel: RegistrationViewModel, onNext: () -> Unit, onBack: () -> Unit) {\r\n    var birthdate by remember { mutableStateOf(\"\") }\r\n    var birthtime by remember { mutableStateOf(\"\") }\r\n    Column(\r\n        modifier = Modifier\r\n            .fillMaxSize()\r\n            .padding(horizontal = 16.dp)\r\n    ) {\r\n        NavigationBar { }\r\n        StandardSpacer(0.07f)\r\n        TitleSection(\"${viewModel.nickname}님 생년월일과 출생 시간을 입력해주세요\", \"나중에 변경할 수 없습니다.\")\r\n\r\n        OutlinedTextField(\r\n            value = birthdate,\r\n            onValueChange = { birthdate = it },\r\n            label = { Text(\"생년월일\") },\r\n            modifier = Modifier.fillMaxWidth()\r\n        )\r\n\r\n        OutlinedTextField(\r\n            value = birthtime,\r\n            onValueChange = { birthtime = it },\r\n            label = { Text(\"출생 시간\") },\r\n            modifier = Modifier.fillMaxWidth()\r\n        )\r\n\r\n        StandardSpacer(0.6f)\r\n\r\n        Button(onClick = {\r\n            viewModel.birthdate = birthdate\r\n            viewModel.birthtime = birthtime\r\n            onNext()\r\n        }, enabled = birthdate.isNotEmpty() && birthtime.isNotEmpty()) {\r\n            Text(\"다음\")\r\n        }\r\n    }\r\n}\r\n\r\n// 관심사 선택 화면\r\n@Composable\r\nfun InterestsStep(viewModel: RegistrationViewModel, onNext: () -> Unit, onBack: () -> Unit) {\r\n    val allInterests = listOf(\"독서\", \"여행\", \"운동\", \"음악\", \"요리\")\r\n    var selectedInterests by remember { mutableStateOf(listOf<String>()) }\r\n\r\n\r\n    Column(\r\n        modifier = Modifier\r\n            .fillMaxSize()\r\n            .padding(horizontal = 16.dp)\r\n    ) {\r\n        NavigationBar { }\r\n        StandardSpacer(0.07f)\r\n        TitleSection(\"${viewModel.nickname} 관심사를 선택해주세요\", \"\")\r\n\r\n        Column {\r\n            allInterests.forEach { interest ->\r\n                Row(\r\n                    modifier = Modifier\r\n                        .fillMaxWidth()\r\n                        .padding(vertical = 4.dp),\r\n                    verticalAlignment = Alignment.CenterVertically\r\n                ) {\r\n                    Checkbox(\r\n                        checked = selectedInterests.contains(interest),\r\n                        onCheckedChange = {\r\n                            selectedInterests = if (selectedInterests.contains(interest)) {\r\n                                selectedInterests - interest\r\n                            } else {\r\n                                selectedInterests + interest\r\n                            }\r\n                        }\r\n                    )\r\n                    Text(interest, modifier = Modifier.padding(start = 8.dp))\r\n                }\r\n            }\r\n        }\r\n\r\n        StandardSpacer(0.4f)\r\n\r\n        Button(onClick = {\r\n            viewModel.interests = selectedInterests\r\n            onNext()\r\n        }, enabled = selectedInterests.isNotEmpty()) {\r\n            Text(\"다음\")\r\n        }\r\n    }\r\n}\r\n\r\n// 프로필 사진 업로드 화면\r\n@Composable\r\nfun ProfilePictureStep(viewModel: RegistrationViewModel, onNext: () -> Unit, onBack: () -> Unit) {\r\n    Column(modifier = Modifier.fillMaxSize().padding(24.dp), verticalArrangement = Arrangement.Center) {\r\n        Text(\"프로필 사진을 업로드하세요\")\r\n\r\n        // TODO: 사진 업로드 기능 추가 (갤러리에서 선택)\r\n\r\n        Spacer(modifier = Modifier.height(16.dp))\r\n\r\n        Button(onClick = { onNext() }) {\r\n            Text(\"다음\")\r\n        }\r\n    }\r\n}\r\n\r\n@Composable\r\nfun SajuAnalysisStep(viewModel: RegistrationViewModel, onNext: () -> Unit) {\r\n    Column(modifier = Modifier.fillMaxSize().padding(24.dp), verticalArrangement = Arrangement.Center) {\r\n        Text(\"관상 및 사주 분석 진행 중...\")\r\n\r\n        // TODO: Flask 서버 요청 후 결과 표시\r\n\r\n        Spacer(modifier = Modifier.height(16.dp))\r\n\r\n        Button(onClick = {\r\n            viewModel.sajuAnalysis = \"GPT 분석 결과...\"\r\n            onNext()\r\n        }) {\r\n            Text(\"다음\")\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// 회원가입 완료 화면\r\n@Composable\r\nfun CompleteStep(viewModel: RegistrationViewModel, navController: NavHostController) {\r\n    Column(\r\n        modifier = Modifier.fillMaxSize().padding(24.dp),\r\n        verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally\r\n    ) {\r\n        Text(\"회원가입이 완료되었습니다!\")\r\n        Spacer(modifier = Modifier.padding(16.dp))\r\n\r\n        Button(onClick = {\r\n            navController.navigate(\"main\") {\r\n                popUpTo(\"login\") { inclusive = true } // 회원가입 및 로그인 화면 제거 후 main으로 이동\r\n            }\r\n        }) {\r\n            Text(\"메인 화면으로 이동\")\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n// 공통 네비게이션 바\r\n@Composable\r\nfun NavigationBar(onBack: () -> Unit) {\r\n    Row(\r\n        modifier = Modifier.fillMaxWidth()\r\n    ) {\r\n        IconButton(\r\n            onClick = onBack,\r\n            modifier = Modifier.fillMaxWidth(0.14f)\r\n        ) {\r\n            Icon(Icons.Filled.ArrowBack, contentDescription = \"뒤로가기\")\r\n        }\r\n        Divider(\r\n            thickness = 1.dp,\r\n            color = Color.Black,\r\n            modifier = Modifier.fillMaxWidth(0.86f)\r\n        )\r\n    }\r\n}\r\n\r\n// 공통 타이틀 텍스트\r\n@Composable\r\nfun TitleSection(title: String, subtitle: String) {\r\n    Column(\r\n        modifier = Modifier.fillMaxWidth()\r\n    ) {\r\n        Text(title)\r\n        Text(subtitle)\r\n    }\r\n}\r\n\r\n// 공통 Spacer\r\n@Composable\r\nfun StandardSpacer(heightFraction: Float) {\r\n    Spacer(modifier = Modifier.fillMaxHeight(heightFraction))\r\n}\r\n\r\n// 공통 Next 버튼\r\n@Composable\r\nfun NextButton(onNext: () -> Unit, enabled: Boolean = true) {\r\n    Button(\r\n        onClick = onNext,\r\n        enabled = enabled,\r\n        modifier = Modifier.fillMaxWidth()\r\n    ) {\r\n        Text(\"다음\")\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/ryh/suyangdaegun/AccessionActivity.kt b/app/src/main/java/com/ryh/suyangdaegun/AccessionActivity.kt
--- a/app/src/main/java/com/ryh/suyangdaegun/AccessionActivity.kt	(revision 6ab151d1257f341195e071b5d2074070394687a7)
+++ b/app/src/main/java/com/ryh/suyangdaegun/AccessionActivity.kt	(date 1738805424425)
@@ -30,6 +30,10 @@
 import org.json.JSONObject
 import java.io.ByteArrayOutputStream
 import java.io.IOException
+import androidx.compose.runtime.Composable
+import androidx.compose.ui.tooling.preview.Preview
+import androidx.lifecycle.ViewModel
+import androidx.compose.runtime.remember
 
 class AccessionActivity : ComponentActivity() {
     override fun onCreate(savedInstanceState: Bundle?) {
@@ -42,6 +46,11 @@
     }
 }
 
+
+
+
+
+
 // 성별 선택 화면
 @Composable
 fun GenderStep(viewModel: RegistrationViewModel, onNext: () -> Unit, onBack: () -> Unit) {
